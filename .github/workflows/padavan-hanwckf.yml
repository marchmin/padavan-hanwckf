name: padavan-hanwckf

on: 
  workflow_dispatch:
env:
  build_dir: /opt/padavan                                       # 源码目录
  images_dir: /opt/images                                       # 固件目录
  work_dir: /opt/padavan/trunk                                  # 工作目录
  config_dir: /opt/padavan/trunk/configs/templates              # 设备模板目录
  src_git: https://github.com/hanwckf/rt-n56u.git               # 源码地址

jobs:
  build:
    name: build
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    env:
      build_variant: ${{ matrix.build_variant }}
      targets: ${{ matrix.targets }}
    strategy:
      matrix:
        include:
          - build_variant: "mt7621"
            targets: "MSG1500-7615"
    steps:
      - name: Checkout main            # 导入主分支
        uses: actions/checkout@v2
      - name: Prepare environment      # 准备编译环境
        run: |                         # 安装依赖包
          sudo apt update
          sudo apt install libtool-bin gperf python3-docutils autopoint gettext
          sudo timedatectl set-timezone 'Asia/Shanghai'  # 设置时区
      - name: Clone source code
        run: |                         # 克隆源码
          git clone --depth=1 $src_git $build_dir
            chmod +x setconfig.sh && sh setconfig.sh
      - name: Run shellcheck
        run: |
          cd $work_dir
          if [ -f ./tools/shellcheck.sh ]; then sh ./tools/shellcheck.sh; fi
      - name: Prepare toolchain
        run: |                         # 下载预编译的构建工具链
          mkdir -p $images_dir
          cd $build_dir/toolchain-mipsel
          sh dl_toolchain.sh

      - name: Start build firmware
        run: |                         # 执行构建固件
          cd $work_dir
          for m in $targets; do fakeroot ./build_firmware_ci $m; \
          if [ $? = 0 ]; then cp -f images/*.trx ${images_dir}/$m-$(date +%Y%m%d).trx; else exit 1; fi; \
          ./clear_tree_simple >/dev/null 2>&1; done
      - name: Upload images to Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v2.2.1
        with:
          name: ${{ env.build_variant }}
          path: ${{ env.images_dir }}

      - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
        with:
         retain_days: 1
         keep_minimum_runs: 3

      - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.2.0
        if: ${{ github.event_name != 'release' && success() }}
        with:
         keep_latest: 3
         delete_tags: true
        env:
         GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
